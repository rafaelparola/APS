/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Bd.Conexao;
import Bd.DentistaBd;
import Bd.SecretarioBd;
import Bd.UsuarioBd;
import Controller.DentistaController;
import Controller.SecretarioController;
import Controller.UsuarioController;
import Model.Dentista;
import Model.Secretario;
import Model.Tabela;
import Model.Usuario;
import java.sql.SQLException;
import java.sql.Time;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author rafael
 */
public class CadastrarDentistaSecretario extends javax.swing.JFrame {

    Dentista dentista = new Dentista();
    DentistaController dentistaController = new DentistaController();
    DentistaBd dentistaBd;
    Secretario secretario = new Secretario();
    SecretarioBd secretarioBd = new SecretarioBd();
    SecretarioController secretarioController = new SecretarioController();
    Usuario usuario = new Usuario();
    UsuarioBd usuarioBd = new UsuarioBd();
    UsuarioController usuarioController = new UsuarioController();
    Conexao conexao = new Conexao();
    
    public CadastrarDentistaSecretario() {
        initComponents();
        JId.setVisible(false);
        jNome.setEnabled(false);
        jtelefone.setEnabled(false);
        jCro.setEnabled(false);
        jHorarioInicio.setEnabled(false);
        jHorarioFim.setEnabled(false);
        bSalvar.setEnabled(false);
        preencherTabela("SELECT NOME, CPF, CRO, TELEFONE_FIXO, HORA_INICIO, HORA_FIM FROM DENTISTAS ORDER BY NOME");
        preencherTabelaSecretarios("SELECT NOME, CPF, TELEFONE_FIXO FROM SECRETARIOS ORDER BY NOME");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCpf = new javax.swing.JTextField();
        jNome = new javax.swing.JTextField();
        jtelefone = new javax.swing.JTextField();
        jCro = new javax.swing.JTextField();
        bSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDentistas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lCro = new javax.swing.JLabel();
        jHorarioInicio = new javax.swing.JFormattedTextField();
        jHorarioFim = new javax.swing.JFormattedTextField();
        lHoraInicio = new javax.swing.JLabel();
        lHoraFim = new javax.swing.JLabel();
        bEditar = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();
        JId = new javax.swing.JTextField();
        jDentistaSecretario = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSecretarios = new javax.swing.JTable();
        bBuscar = new javax.swing.JButton();
        lF1 = new javax.swing.JLabel();
        lF2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bCadastrar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLogin = new javax.swing.JTextField();
        jSenha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCpfActionPerformed(evt);
            }
        });

        jtelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtelefoneActionPerformed(evt);
            }
        });

        bSalvar.setText("Salvar");
        bSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSalvarMouseClicked(evt);
            }
        });
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        jTableDentistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableDentistas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDentistasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDentistas);

        jLabel1.setText("* CPF");

        jLabel2.setText("* Nome");

        jLabel3.setText("* Telefone");

        lCro.setText("* CRO");

        jHorarioInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm:ss"))));

        jHorarioFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm:ss"))));

        lHoraInicio.setText("* Hora início");

        lHoraFim.setText("* Hora fim");

        bEditar.setText("Editar");
        bEditar.setEnabled(false);
        bEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bEditarMouseClicked(evt);
            }
        });
        bEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarActionPerformed(evt);
            }
        });

        bExcluir.setText("Excluir");
        bExcluir.setEnabled(false);
        bExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bExcluirMouseClicked(evt);
            }
        });
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        JId.setText("ID");

        jDentistaSecretario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dentista", "Secretario" }));
        jDentistaSecretario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDentistaSecretarioActionPerformed(evt);
            }
        });

        jTableSecretarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableSecretarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSecretariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableSecretarios);

        bBuscar.setText("Buscar");
        bBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bBuscarMouseClicked(evt);
            }
        });

        lF1.setText("hh:mm:ss");

        lF2.setText("hh:mm:ss");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel4.setText("Cadastro de dentista e secretário");

        jLabel5.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel5.setText("Dentistas");

        jLabel6.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel6.setText("Secretarios");

        bCadastrar.setText("Cadastrar");
        bCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bCadastrarMouseClicked(evt);
            }
        });
        bCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarActionPerformed(evt);
            }
        });

        jLabel7.setText("* Login");

        jLabel8.setText("* Senha");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(JId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(lCro)
                                            .addComponent(lHoraInicio)
                                            .addComponent(lHoraFim))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(19, 19, 19)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jHorarioFim, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(jHorarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCro, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDentistaSecretario, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bBuscar)
                                        .addGap(24, 24, 24))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lF1)
                                            .addComponent(lF2))
                                        .addGap(18, 18, 18))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(jSenha))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(jLabel5)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(bCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bExcluir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jDentistaSecretario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(JId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bBuscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lCro)
                            .addComponent(jCro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lHoraInicio)
                            .addComponent(jHorarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lF1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lHoraFim)
                            .addComponent(jHorarioFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lF2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSalvar)
                    .addComponent(bEditar)
                    .addComponent(bExcluir)
                    .addComponent(bCadastrar))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCpfActionPerformed

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        
    }//GEN-LAST:event_bSalvarActionPerformed

    private void bSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSalvarMouseClicked
           
        if(jDentistaSecretario.getSelectedItem().toString().equals("Dentista")){
            try {
               if("".equals(jCpf.getText())){
            dentista.setCpf(0L);
        }else{dentista.setCpf(Long.parseLong(jCpf.getText()));
               usuario.setCpfUsuario(Long.parseLong(jCpf.getText()));}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CPF invalido.");
                return;
            }
        
        try {
            if("".equals(jCro.getText())){
            dentista.setCro((int) 0L);
        }else{dentista.setCro((int) Long.parseLong(jCro.getText()));}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CRO invalido.");
                return;
            }
        
        dentista.setId(0L);
        dentista.setNome(jNome.getText());
        dentista.setTelefoneFixo(jtelefone.getText());
        dentista.setHoraInicio(jHorarioInicio.getText());
        dentista.setHoraFim(jHorarioFim.getText());
        usuario.setLogin(jLogin.getText());
        usuario.setSenha(jSenha.getText());
        usuario.setTipoUsuario("D");
        dentistaController.insereDentista(dentista);
        usuarioController.insereUsuario(usuario);
        
        this.limpaCampos();
        bSalvar.setEnabled(false);
        jNome.setEnabled(false);
        jtelefone.setEnabled(false);
        jCro.setEnabled(false);
        jHorarioInicio.setEnabled(false);
        jHorarioFim.setEnabled(false);
        bCadastrar.setEnabled(true);
        preencherTabela("SELECT NOME, CPF, CRO, TELEFONE_FIXO, HORA_INICIO, HORA_FIM FROM DENTISTAS ORDER BY NOME");
        }
        
        
        else if(jDentistaSecretario.getSelectedItem().toString().equals("Secretario")){
            try {
               if("".equals(jCpf.getText())){
            secretario.setCpf(0L);
        }else{secretario.setCpf(Long.parseLong(jCpf.getText()));}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CPF invalido.");
                return;
            }
        
        
        secretario.setNome(jNome.getText());
        secretario.setTelefoneFixo(jtelefone.getText());
        usuario.setLogin(jLogin.getText());
        usuario.setSenha(jSenha.getText());
        usuario.setTipoUsuario("S");
        secretarioController.insereSecretario(secretario);
        usuarioController.insereUsuario(usuario);
        this.limpaCampos();
        
        bSalvar.setEnabled(false);
        jNome.setEnabled(false);
        jtelefone.setEnabled(false);
        jCro.setEnabled(false);
        jHorarioInicio.setEnabled(false);
        jHorarioFim.setEnabled(false);
        bCadastrar.setEnabled(true);
        preencherTabelaSecretarios("SELECT NOME, CPF, TELEFONE_FIXO FROM SECRETARIOS ORDER BY NOME");
        }
    }//GEN-LAST:event_bSalvarMouseClicked

    private void jTableDentistasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDentistasMouseClicked
        String cpf = "" + jTableDentistas.getValueAt(jTableDentistas.getSelectedRow(), 1);
        conexao.conecta();
        conexao.executaSql("SELECT ID, NOME, CPF, CRO, TELEFONE_FIXO, HORA_INICIO, HORA_FIM FROM DENTISTAS WHERE CPF = '"+Long.parseLong(cpf)+"'");
        try {
            conexao.rs.first();
            JId.setText(""+conexao.rs.getInt("id"));
            jNome.setText(conexao.rs.getString("nome"));
            jCpf.setText(String.valueOf(conexao.rs.getLong("cpf")));
            jCro.setText(String.valueOf(conexao.rs.getLong("cro")));
            jtelefone.setText(conexao.rs.getString("telefone_fixo"));
            jHorarioInicio.setText(conexao.rs.getString("hora_inicio"));
            jHorarioFim.setText(conexao.rs.getString("hora_fim"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Errocriado no mouse clicked: "+ex);
        }
        conexao.desconecta();
        bEditar.setEnabled(true);
        bSalvar.setEnabled(false);
        bExcluir.setEnabled(true);
        bEditar.setEnabled(true);
        bCadastrar.setEnabled(false);
        jNome.setEnabled(true);
        jtelefone.setEnabled(true);
        jCro.setEnabled(true);
        jHorarioInicio.setEnabled(true);
        jHorarioFim.setEnabled(true);
        jDentistaSecretario.setSelectedIndex(0);
    }//GEN-LAST:event_jTableDentistasMouseClicked

    private void bEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEditarMouseClicked
        if(jDentistaSecretario.getSelectedItem().toString().equals("Dentista")){
            try {
               if("".equals(jCpf.getText())){
            dentista.setCpf(0L);
        }else{dentista.setCpf(Long.parseLong(jCpf.getText()));}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CPF invalido.");
                return;
            }
        
        try {
            if("".equals(jCro.getText())){
            dentista.setCro((int) 0L);
        }else{dentista.setCro((int) Long.parseLong(jCro.getText()));}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CRO invalido.");
                return;
            }
        
        dentista.setId(Long.parseLong(JId.getText()));
        dentista.setNome(jNome.getText());
        dentista.setTelefoneFixo(jtelefone.getText());
        dentista.setHoraInicio(jHorarioInicio.getText());
        dentista.setHoraFim(jHorarioFim.getText());
        
        dentistaController.editaDentista(dentista);
        this.limpaCampos();
        
        preencherTabela("SELECT NOME, CPF, CRO, TELEFONE_FIXO, HORA_INICIO, HORA_FIM FROM DENTISTAS ORDER BY NOME");
        } 
        
        else if(jDentistaSecretario.getSelectedItem().toString().equals("Secretario")){
            try {
               if("".equals(jCpf.getText())){
            secretario.setCpf(0L);
        }else{secretario.setCpf(Long.parseLong(jCpf.getText()));}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CPF invalido.");
                return;
            }
        
        secretario.setId(Long.parseLong(JId.getText()));
        secretario.setNome(jNome.getText());
        secretario.setTelefoneFixo(jtelefone.getText());
        
        secretarioController.editaSecretario(secretario);
        this.limpaCampos();
        
        preencherTabelaSecretarios("SELECT NOME, CPF, TELEFONE_FIXO FROM SECRETARIOS ORDER BY NOME");
        }
        bCadastrar.setEnabled(true);
        bSalvar.setEnabled(false);
        bEditar.setEnabled(false);
        bExcluir.setEnabled(false);
        bEditar.setEnabled(false);
        jNome.setEnabled(false);
        jtelefone.setEnabled(false);
        jCro.setEnabled(false);
        jHorarioInicio.setEnabled(false);
        jHorarioFim.setEnabled(false);
        
    }//GEN-LAST:event_bEditarMouseClicked

    private void bEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEditarActionPerformed

    private void bExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bExcluirMouseClicked
        
        if(jDentistaSecretario.getSelectedItem().toString().equals("Dentista")){
            dentista.setCpf(Long.parseLong(jCpf.getText()));
        dentista.setNome(jNome.getText());
        dentista.setTelefoneFixo(jtelefone.getText());
        dentista.setCro((int) Long.parseLong(jCro.getText()));
        dentista.setHoraInicio(jHorarioInicio.getText());
        dentista.setHoraFim(jHorarioFim.getText());
        
        dentistaController.excluiDentista(dentista);
        
        preencherTabela("SELECT NOME, CPF, CRO, TELEFONE_FIXO, HORA_INICIO, HORA_FIM FROM DENTISTAS ORDER BY NOME");
        
        }
        
        else if(jDentistaSecretario.getSelectedItem().toString().equals("Secretario")){
        secretario.setCpf(Long.parseLong(jCpf.getText()));
        secretario.setNome(jNome.getText());
        secretario.setTelefoneFixo(jtelefone.getText());
        
        secretarioController.excluiSecretario(secretario);
        
        preencherTabelaSecretarios("SELECT NOME, CPF, TELEFONE_FIXO FROM SECRETARIOS ORDER BY NOME");
        
        }
        bCadastrar.setEnabled(true);
        bSalvar.setEnabled(false);
        bEditar.setEnabled(false);
        bExcluir.setEnabled(false);
        bEditar.setEnabled(false);
        jNome.setEnabled(false);
        jtelefone.setEnabled(false);
        jCro.setEnabled(false);
        jHorarioInicio.setEnabled(false);
        jHorarioFim.setEnabled(false);
        this.limpaCampos();
    }//GEN-LAST:event_bExcluirMouseClicked

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bExcluirActionPerformed

    private void jTableSecretariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSecretariosMouseClicked
        String cpf = "" + jTableSecretarios.getValueAt(jTableSecretarios.getSelectedRow(), 1);
        conexao.conecta();
        conexao.executaSql("SELECT ID, NOME, CPF, TELEFONE_FIXO FROM SECRETARIOS WHERE CPF = '"+Long.parseLong(cpf)+"'");
        try {
            conexao.rs.first();
            JId.setText(""+conexao.rs.getInt("id"));
            jNome.setText(conexao.rs.getString("nome"));
            jCpf.setText(String.valueOf(conexao.rs.getLong("cpf")));
            jtelefone.setText(conexao.rs.getString("telefone_fixo"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Errocriado no mouse clicked: "+ex);
        }
        conexao.desconecta();
        bEditar.setEnabled(true);
        bSalvar.setEnabled(false);
        bExcluir.setEnabled(true);
        bEditar.setEnabled(true);
        bCadastrar.setEnabled(false);
        jNome.setEnabled(true);
        jtelefone.setEnabled(true);
        jCro.setEnabled(true);
        jHorarioInicio.setEnabled(true);
        jHorarioFim.setEnabled(true);
        jDentistaSecretario.setSelectedIndex(1);
        
    }//GEN-LAST:event_jTableSecretariosMouseClicked

    private void bBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBuscarMouseClicked
        if(jDentistaSecretario.getSelectedItem().toString().equals("Dentista")){
         try {
               if("".equals(jCpf.getText())){
            dentista.setCpf(0L);
        }else{dentista = dentistaController.buscaDentista(Long.parseLong(jCpf.getText()));
               JId.setText(""+dentista.getId());
                jNome.setText(dentista.getNome());
                jCro.setText(""+dentista.getCro());
                jtelefone.setText(dentista.getTelefoneFixo());
                jHorarioInicio.setText(dentista.getHoraInicio());
                jHorarioFim.setText(dentista.getHoraFim());}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CPF invalido.");
                return;
            }
     
          if(!"".equals(jNome.getText())){ bEditar.setEnabled(true);
        bSalvar.setEnabled(false);
        bExcluir.setEnabled(true);
          bCadastrar.setEnabled(false);
          jNome.setEnabled(true);
        jtelefone.setEnabled(true);
        jCro.setEnabled(true);
        jHorarioInicio.setEnabled(true);
        jHorarioFim.setEnabled(true);}
          
        }else if (jDentistaSecretario.getSelectedItem().toString().equals("Secretario")){
            try {
               if("".equals(jCpf.getText())){
            secretario.setCpf(0L);
        }else{secretario = secretarioController.buscaSecretario(Long.parseLong(jCpf.getText()));
               JId.setText(""+secretario.getId());
     jNome.setText(secretario.getNome());
     jtelefone.setText(secretario.getTelefoneFixo());}
        } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "CPF invalido.");
                return;
            }
        
     
     /*bEditar.setEnabled(true);
        bSalvar.setEnabled(false);
        bExcluir.setEnabled(true);*/
        if(!"".equals(jNome.getText())){ bEditar.setEnabled(true);
        bCadastrar.setEnabled(false);
        bSalvar.setEnabled(false);
        bExcluir.setEnabled(true);
        bEditar.setEnabled(true);
        jNome.setEnabled(true);
        jtelefone.setEnabled(true);
        jCro.setEnabled(true);
        jHorarioInicio.setEnabled(true);
        jHorarioFim.setEnabled(true);}
        
        }
        
        
    }//GEN-LAST:event_bBuscarMouseClicked

    private void jDentistaSecretarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDentistaSecretarioActionPerformed
       if(jDentistaSecretario.getSelectedItem().toString().equals("Dentista")){
           
           jCro.setVisible(true);
           jHorarioInicio.setVisible(true);
           jHorarioFim.setVisible(true);
           lCro.setVisible(true);
           lHoraInicio.setVisible(true);
           lHoraFim.setVisible(true);
           lF1.setVisible(true);
           lF2.setVisible(true);
       }
       else if(jDentistaSecretario.getSelectedItem().toString().equals("Secretario")){
           
           jCro.setVisible(false);
           jHorarioInicio.setVisible(false);
           jHorarioFim.setVisible(false);
           lCro.setVisible(false);
           lHoraInicio.setVisible(false);
           lHoraFim.setVisible(false);
           lF1.setVisible(false);
           lF2.setVisible(false);
       }
    }//GEN-LAST:event_jDentistaSecretarioActionPerformed

    private void jtelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtelefoneActionPerformed

    private void bCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCadastrarMouseClicked
        jNome.setEnabled(true);
        jtelefone.setEnabled(true);
        jCro.setEnabled(true);
        jHorarioInicio.setEnabled(true);
        jHorarioFim.setEnabled(true);
        bSalvar.setEnabled(true);
        bCadastrar.setEnabled(false);
    }//GEN-LAST:event_bCadastrarMouseClicked

    private void bCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bCadastrarActionPerformed

    public void verificaCamposObriatoriosDentista(){
        
    }
    
    public void preencherTabela(String sql){
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Nome", "CPF", "CRO", "Telefone", "Hora Início", "Hora Fim"};
        conexao.conecta();
        conexao.executaSql(sql);
        try{
            conexao.rs.first();
            do{
                dados.add(new Object[]{conexao.rs.getString("nome"), conexao.rs.getLong("cpf"),
                                       conexao.rs.getLong("cro"), conexao.rs.getString("telefone_fixo"),
                                       conexao.rs.getTime("HORA_INICIO").toString(), conexao.rs.getTime("HORA_FIM").toString()});
            }while(conexao.rs.next());
        }catch(SQLException ex){
            //JOptionPane.showMessageDialog(rootPane,"erro ao preencher arraLyst: "+ ex);
        }
        Tabela modelo = new Tabela(dados, colunas);
        jTableDentistas.setModel(modelo);
        jTableDentistas.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTableDentistas.getColumnModel().getColumn(0).setResizable(false);
        jTableDentistas.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableDentistas.getColumnModel().getColumn(1).setResizable(false);
        jTableDentistas.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableDentistas.getColumnModel().getColumn(2).setResizable(false);
        jTableDentistas.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTableDentistas.getColumnModel().getColumn(3).setResizable(false);
        jTableDentistas.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTableDentistas.getColumnModel().getColumn(4).setResizable(false);
        jTableDentistas.getColumnModel().getColumn(5).setPreferredWidth(90);
        jTableDentistas.getColumnModel().getColumn(5).setResizable(false);
        jTableDentistas.getTableHeader().setReorderingAllowed(false);
        jTableDentistas.setAutoResizeMode(jTableDentistas.AUTO_RESIZE_OFF);
        jTableDentistas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conexao.desconecta();
    }
    
    
    public void preencherTabelaSecretarios(String sql){
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Nome", "CPF", "Telefone"};
        conexao.conecta();
        conexao.executaSql(sql);
        try{
            conexao.rs.first();
            do{
                dados.add(new Object[]{conexao.rs.getString("nome"), conexao.rs.getLong("cpf"),
                                       conexao.rs.getString("telefone_fixo")});
                                       
            }while(conexao.rs.next());
        }catch(SQLException ex){
            //JOptionPane.showMessageDialog(rootPane,"erro ao preencher arraLyst: "+ ex);
        }
        Tabela modelo = new Tabela(dados, colunas);
        jTableSecretarios.setModel(modelo);
        jTableSecretarios.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTableSecretarios.getColumnModel().getColumn(0).setResizable(false);
        jTableSecretarios.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableSecretarios.getColumnModel().getColumn(1).setResizable(false);
        jTableSecretarios.getColumnModel().getColumn(2).setPreferredWidth(395);
        jTableSecretarios.getColumnModel().getColumn(2).setResizable(false);
        jTableSecretarios.getTableHeader().setReorderingAllowed(false);
        jTableSecretarios.setAutoResizeMode(jTableSecretarios.AUTO_RESIZE_OFF);
        jTableSecretarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conexao.desconecta();
    }
    
    public void limpaCampos(){
        JId.setText("");
        jCpf.setText("");
        jNome.setText("");
        jtelefone.setText("");
        jCro.setText("");
        jHorarioFim.setText("");
        jHorarioInicio.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarDentistaSecretario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarDentistaSecretario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarDentistaSecretario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarDentistaSecretario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarDentistaSecretario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JId;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bCadastrar;
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bSalvar;
    private javax.swing.JTextField jCpf;
    private javax.swing.JTextField jCro;
    private javax.swing.JComboBox<String> jDentistaSecretario;
    private javax.swing.JFormattedTextField jHorarioFim;
    private javax.swing.JFormattedTextField jHorarioInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jLogin;
    private javax.swing.JTextField jNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jSenha;
    private javax.swing.JTable jTableDentistas;
    private javax.swing.JTable jTableSecretarios;
    private javax.swing.JTextField jtelefone;
    private javax.swing.JLabel lCro;
    private javax.swing.JLabel lF1;
    private javax.swing.JLabel lF2;
    private javax.swing.JLabel lHoraFim;
    private javax.swing.JLabel lHoraInicio;
    // End of variables declaration//GEN-END:variables
}
